{"version":3,"sources":["modules/kepler-no-code/store/types/state.ts","modules/kepler-gl/store.ts","modules/kepler-no-code/store/reducer.ts","modules/kepler-no-code/store/index.ts","modules/kepler-no-code/constant.ts","modules/kepler-no-code/components/modal-dialogs/html-tag-export-dialog-content.tsx","modules/kepler-no-code/effects/useKeplerAppState.ts","modules/kepler-no-code/effects/useOriginalHtmlTagState.ts","modules/kepler-no-code/components/modal-dialogs/index.tsx","modules/kepler-no-code/effects/useModalDialogState.ts","modules/kepler-no-code/store/actions.ts","modules/kepler-no-code/components/kepler-no-code-tool.tsx","modules/kepler-gl/kepler-gl.tsx","modules/kepler-no-code/mount-kepler-gl.tsx","modules/kepler-no-code/index.ts","reportWebVitals.ts","index.tsx","../node_modules/kepler.gl/dist/localization sync /^/.//.*$"],"names":["ModalIds","createReducer","initialState","reducers","keplerReducer","keplerGlReducer","uiState","mapState","visState","mapStyle","providerState","combineReducers","keplerGl","MODAL_OPEN","MODAL_CLOSE","ORIGINAl_HTML_TAG_SET_META","store","reducer","createReduxStore","applyMiddleware","taskMiddleware","createKeplerStore","keplerNoCode","state","modalDialog","isOpened","activeDialogId","action","type","modalId","originalHtmlTag","meta","payload","keplerGlComponentId","encodHtml","str","htmlEntities","regex","entity","v","replace","HtmlTagExportDialogContent","keplerComponentId","keplerAppState","useSelector","modalContent","configToSave","KeplerGlSchema","getConfigToSave","htmlTag","tag","mapboxToken","width","height","JSON","stringify","config","onload","style","whiteSpace","ModalDialog","modalState","activeDialog","HTML_TAG_SAVE","isOpen","onCancel","dispatch","modalClose","KeplerNoCodeTool","props","KeplerGl","uiOverwrites","SaveExportDropdown","SaveExportDropdownFactory","PanelHeaderDropdownFactory","SaveExportDropdownWithState","withState","items","sidePanel","header","share","dropdown","buttons","injectComponents","createKeplerGl","label","icon","Icons","Picture","key","onClick","args","onExportImage","Save2","modalOpen","Promise","resolve","then","addDataToMap","datasets","dataSets","option","centerMap","readOnly","dataDisplayOptions","keplerState","originalHtmlTagSetMeta","originalHtmlTagMeta","id","mapboxApiAccessToken","mountKeplerGl","element","params","app","ReactDOM","render","parseJSON","obj","err","parse","e","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","console","log","window","initKepler","dataset","Error","rawWidth","Number","parseInt","rawHeight","error","val","onloadStr","toString","originalOnLoad","substring","indexOf","lastIndexOf","tagName","document","addEventListener","querySelectorAll","forEach","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.2385d6e8.chunk.js","sourcesContent":["export const MODAL_OPEN = 'KEPLER_NO_CODE__MODAL_DIALOG__OPEN';\nexport const MODAL_CLOSE = 'KEPLER_NO_CODE__MODAL_DIALOG__CLOSE';\nexport const ORIGINAl_HTML_TAG_SET_META = 'KEPLER_NO_CODE__ORIGINAl_HTML_TAG__SET_META';\n\nexport enum ModalIds {\n  HTML_TAG_SAVE = 'HTML_TAG_SAVE'\n}\n\nexport interface ModalOpenAction {\n  type: typeof MODAL_OPEN;\n  modalId: ModalIds;\n}\n\nexport interface ModalCloseAction {\n  type: typeof MODAL_CLOSE;\n}\n\nexport interface OriginalHtmlTagSetMeta {\n  type: typeof ORIGINAl_HTML_TAG_SET_META;\n  payload: {\n    tag: string;\n    width: number,\n    height: number,\n    mapboxToken: string,\n    onload: string\n  }\n}\n\nexport interface ModalDialog {\n  isOpened: boolean,\n  activeDialogId: ModalIds | null\n}\n\nexport interface OriginalHtmlTag {\n  meta: {\n    tag: string;\n    width: number,\n    height: number,\n    mapboxToken: string,\n    onload: string\n  },\n}\n\nexport interface KeplerNoCodeState {\n  modalDialog: ModalDialog;\n  originalHtmlTag?: OriginalHtmlTag\n}\n\nexport type actions = ModalOpenAction | ModalCloseAction | OriginalHtmlTagSetMeta;\n","import keplerGlReducer from 'kepler.gl/reducers';\nimport {applyMiddleware, combineReducers, createStore as createReduxStore} from \"redux\";\nimport {taskMiddleware} from 'react-palm/tasks';\nimport {Reducer} from 'react';\nimport {MapState, MapStyle, ProviderState, UiState, VisState} from './types/state';\n\nexport interface InitState {\n  uiState?: UiState;\n  mapState?: MapState;\n  visState?: VisState;\n  mapStyle?: MapStyle;\n  providerState?: ProviderState;\n}\n\nexport const createReducer = (initialState: InitState, reducers: Record<string, Reducer<any, any>> = {}) => {\n  const keplerReducer = keplerGlReducer.initialState({\n    uiState: initialState.uiState,\n    mapState: initialState.mapState,\n    visState: initialState.visState,\n    mapStyle: initialState.mapStyle,\n    providerState: initialState.providerState,\n  });\n\n  return combineReducers({\n    keplerGl: keplerReducer,\n    ...reducers,\n  });\n};\n\nexport const createStore = (initialState: InitState, reducers: Record<string, Reducer<any, any>> = {}) => {\n  const reducer = createReducer(initialState, reducers);\n\n  return createReduxStore(reducer, {}, applyMiddleware(taskMiddleware));\n};\n","import {\n  actions,\n  KeplerNoCodeState,\n  MODAL_CLOSE,\n  MODAL_OPEN,\n  ORIGINAl_HTML_TAG_SET_META\n} from \"./types/state\";\n\nexport const reducer = (state: KeplerNoCodeState = {\n  modalDialog: {\n    isOpened: false,\n    activeDialogId: null,\n  }\n}, action: actions): KeplerNoCodeState => {\n  if (action.type === MODAL_OPEN) {\n    return {\n      ...state,\n      modalDialog: {\n        ...state.modalDialog,\n        isOpened: true,\n        activeDialogId: action.modalId,\n      }\n    }\n  }\n\n  if (action.type === MODAL_CLOSE) {\n    return {\n      ...state,\n      modalDialog: {\n        ...state.modalDialog,\n        isOpened: false,\n        activeDialogId: null,\n      }\n    }\n  }\n\n  if (action.type === ORIGINAl_HTML_TAG_SET_META) {\n    return {\n      ...state,\n      originalHtmlTag: {\n        ...state.originalHtmlTag,\n        meta: action.payload,\n      },\n    }\n  }\n\n  return state;\n};\n","import {createStore as createKeplerStore} from '../../kepler-gl/index'\nimport {reducer} from \"./reducer\";\nimport {KeplerReduxState} from \"../../kepler-gl/types/state\";\nimport { Store } from 'redux';\nimport {KeplerNoCodeState} from \"./types/state\";\n\nexport interface ReduxState extends KeplerReduxState {\n  keplerNoCode: KeplerNoCodeState,\n}\n\nexport const store: Store<ReduxState> = createKeplerStore({}, {\n  keplerNoCode: reducer\n}) as Store<ReduxState>; // TODO: fix typing\n","export const keplerGlComponentId = 'kepler-root';\n","import {keplerGlComponentId} from \"../../constant\";\nimport {useKeplerAppState} from \"../../effects/useKeplerAppState\";\nimport KeplerGlSchema from \"kepler.gl/schemas\";\nimport {StyledModalContent} from \"kepler.gl/components\";\nimport React from \"react\";\nimport {useModalDialogState} from \"../../effects/useModalDialogState\";\nimport {useOriginalHtmlTagState} from \"../../effects/useOriginalHtmlTagState\";\n\nfunction encodHtml(str: string){\n  const htmlEntities = [\n    {regex:/&/g,entity:'&amp;'},\n    {regex:/>/g,entity:'&gt;'},\n    {regex:/</g,entity:'&lt;'},\n    {regex:/\"/g,entity:'&quot;'},\n    {regex:/á/g,entity:'&aacute;'},\n    {regex:/é/g,entity:'&eacute;'},\n    {regex:/í/g,entity:'&iacute;'},\n    {regex:/ó/g,entity:'&oacute;'},\n    {regex:/ú/g,entity:'&uacute;'}\n  ];\n\n\n  for(const v in htmlEntities){\n    str = str.replace(htmlEntities[v].regex, htmlEntities[v].entity);\n  }\n\n  return str;\n}\n\nexport const HtmlTagExportDialogContent = () => {\n  const keplerAppState = useKeplerAppState(keplerGlComponentId);\n  const originalHtmlTag = useOriginalHtmlTagState();\n  // TODO: add preloader\n  const preloader = <div>Loading...</div>\n\n  let modalContent = preloader;\n  if (keplerAppState && originalHtmlTag) {\n    const configToSave = KeplerGlSchema.getConfigToSave(keplerAppState);\n\n    const htmlTag = (`<${originalHtmlTag.meta.tag}\n    data-widget-type=\"kepler.gl\"\n    data-mapbox-token=\"${originalHtmlTag.meta.mapboxToken}\"\n    data-width=\"${originalHtmlTag.meta.width}\"\n    data-height=\"${originalHtmlTag.meta.height}\"\n    data-vis-state=\"${encodHtml(JSON.stringify(configToSave.config.visState))}\"\n    data-map-state=\"${encodHtml(JSON.stringify(configToSave.config.mapState))}\"\n    data-map-style=\"${encodHtml(JSON.stringify(configToSave.config.mapStyle))}\"\n    onLoad=\"${originalHtmlTag.meta.onload}\"\n/>`);\n    modalContent= <code style={{whiteSpace: 'pre'}}>\n      {htmlTag}\n    </code>;\n  }\n  return <StyledModalContent>\n    {modalContent}\n  </StyledModalContent>\n}\n","import {useSelector} from \"react-redux\";\nimport {KeplerReduxState} from \"../../kepler-gl/types/state\";\n\nexport const useKeplerAppState = (keplerComponentId: string): KeplerReduxState => {\n  return useSelector((state: KeplerReduxState) => {\n    return state.keplerGl[keplerComponentId];\n  });\n}\n","import {useSelector} from \"react-redux\";\nimport {ModalDialog, OriginalHtmlTag} from \"../store/types/state\";\nimport {ReduxState} from \"../store\";\n\nexport const useOriginalHtmlTagState = (): OriginalHtmlTag | undefined => {\n  return useSelector((state: ReduxState) => {\n    return state.keplerNoCode.originalHtmlTag;\n  });\n}\n","import {Modal, StyledModalContent} from \"kepler.gl/components\";\nimport React from \"react\";\nimport {modalClose} from \"../../store/actions\";\nimport {useModalDialogState} from \"../../effects/useModalDialogState\";\nimport {ModalIds} from \"../../store/types/state\";\nimport {HtmlTagExportDialogContent} from \"./html-tag-export-dialog-content\";\n\nexport const ModalDialog = () => {\n  const modalState = useModalDialogState();\n  let activeDialog = <div>No active dialog</div>;\n  if (modalState.activeDialogId === ModalIds.HTML_TAG_SAVE) {\n    activeDialog = <HtmlTagExportDialogContent/>;\n  }\n\n  return <Modal isOpen={modalState.isOpened} onCancel={() => modalClose()}>\n    <StyledModalContent>\n      {activeDialog}\n    </StyledModalContent>\n  </Modal>\n}\n","import {useSelector} from \"react-redux\";\nimport {ModalDialog} from \"../store/types/state\";\nimport {ReduxState} from \"../store\";\n\nexport const useModalDialogState = (): ModalDialog => {\n  return useSelector((state: ReduxState) => {\n    return state.keplerNoCode.modalDialog;\n  });\n}\n","import {store} from \"./index\";\nimport {\n  MODAL_CLOSE,\n  MODAL_OPEN,\n  ModalCloseAction,\n  ModalIds,\n  ModalOpenAction,\n  ORIGINAl_HTML_TAG_SET_META,\n  OriginalHtmlTagSetMeta\n} from \"./types/state\";\n\nexport const modalOpen = (modalId: ModalIds) => {\n  const action: ModalOpenAction = {\n    type: MODAL_OPEN,\n    modalId: modalId,\n  };\n  store.dispatch(action);\n}\n\nexport const modalClose = () => {\n  const action: ModalCloseAction = {\n    type: MODAL_CLOSE,\n  };\n  store.dispatch(action);\n}\n\nexport const originalHtmlTagSetMeta = (payload: {\n  tag: string;\n  width: number,\n  height: number,\n  mapboxToken: string,\n  onload: string\n}) => {\n  const action: OriginalHtmlTagSetMeta = {\n    type: ORIGINAl_HTML_TAG_SET_META,\n    payload,\n  };\n  store.dispatch(action);\n}\n\n\n","import {createKeplerGl} from \"../../kepler-gl\";\nimport {Icons} from \"kepler.gl\";\nimport {modalOpen, originalHtmlTagSetMeta} from \"../store/actions\";\nimport {ModalIds} from \"../store/types/state\";\nimport {DataSet} from \"../../kepler-gl/types/data\";\nimport {MapState, MapStyle, UiState, VisState} from \"../../kepler-gl/types/state\";\nimport {keplerGlComponentId} from \"../constant\";\nimport React from \"react\";\nimport {addDataToMap} from \"kepler.gl/actions\";\nimport {store} from \"../store\";\nimport {ModalDialog} from \"./modal-dialogs\";\n\nexport const KeplerNoCodeTool = (props: {\n  mapboxApiAccessToken: string;\n  width: number;\n  height: number;\n  dataSets: Array<DataSet>;\n  dataDisplayOptions?: {\n    readOnly?: boolean,\n    centerMap?: boolean,\n  },\n  originalHtmlTagMeta: {\n    tag: string;\n    width: number,\n    height: number,\n    mapboxToken: string,\n    onload: string\n  },\n  keplerState: {\n    uiState?: UiState;\n    visState?: VisState;\n    mapState?: MapState;\n    mapStyle?: MapStyle;\n  },\n}) => {\n  const KeplerGl = createKeplerGl({\n    sidePanel: {\n      header: {\n        share: {\n          dropdown: {\n            buttons: [\n              {\n                label: 'toolbar.exportImage',\n                icon: Icons.Picture,\n                key: 'image',\n                onClick: (args) => args.onExportImage,\n              },\n              {\n                label: 'toolbar.saveMap',\n                icon: Icons.Save2,\n                key: 'save',\n                onClick: () => () => modalOpen(ModalIds.HTML_TAG_SAVE),\n              },\n            ],\n          }\n        }\n      }\n    }\n  });\n\n  Promise.resolve().then(() => {\n    store.dispatch(addDataToMap({\n      datasets: props.dataSets,\n      // option\n      option: {\n        centerMap: true,\n        readOnly: false,\n        ...(props.dataDisplayOptions || {})\n      },\n      config: {\n        visState: props.keplerState.visState,\n        mapStyle: props.keplerState.mapStyle,\n        mapState: props.keplerState.mapState,\n      },\n    }));\n\n    originalHtmlTagSetMeta(props.originalHtmlTagMeta);\n  });\n\n  return (<div>\n    <KeplerGl\n      id={keplerGlComponentId}\n      mapboxApiAccessToken={props.mapboxApiAccessToken}\n      width={props.width}\n      height={props.height}\n    />\n    <ModalDialog/>\n  </div>);\n}\n","import {injectComponents, PanelHeaderDropdownFactory, SaveExportDropdownFactory, withState} from \"kepler.gl/components\";\nimport React from 'react';\n\nexport interface AnyAction {\n  type: string;\n  [otherProps: string]: any\n}\n\nexport type AnyActionFn = () => AnyAction;\n\nexport type AnyFn = (...args: Array<any>) => any;\n\nexport interface ShareButtonsHandlerFactoryProps {\n  onExportImage: AnyActionFn,\n  // TODO: add other props\n}\n\nexport interface ShareButton {\n  label: string;\n  icon: React.Component;\n  key: string;\n  onClick: (props: ShareButtonsHandlerFactoryProps) => AnyFn,\n}\n\nexport interface UiOverwrites {\n  sidePanel?: {\n    header?: {\n      share?: {\n        dropdown?: {\n          buttons?: Array<ShareButton>;\n        };\n      };\n    };\n  };\n}\n\n/**\n * Function to create kepler gl react component.\n *\n * Kepler gl could component could be extended by config\n *\n * @param uiOverwrites - overwrites for ui, allows to extend kepler UI\n */\nexport const createKeplerGl = (uiOverwrites: UiOverwrites) => {\n  const SaveExportDropdown = SaveExportDropdownFactory(PanelHeaderDropdownFactory());\n  const SaveExportDropdownWithState = withState([], () => ({\n    items: uiOverwrites?.sidePanel?.header?.share?.dropdown?.buttons,\n  }), {})(SaveExportDropdown);\n\n  const KeplerComponent = injectComponents([\n    [SaveExportDropdownFactory, () => SaveExportDropdownWithState],\n  ]);\n\n  return KeplerComponent;\n};\n","import React from 'react';\n\nimport {Provider, useSelector} from \"react-redux\";\nimport {addDataToMap } from \"kepler.gl/actions\";\nimport KeplerGlSchema from 'kepler.gl/schemas';\nimport {Icons} from \"kepler.gl\";\nimport {createStore, createKeplerGl} from '../kepler-gl';\nimport {Modal, StyledModalContent} from 'kepler.gl/components';\nimport {MapState, MapStyle, UiState, VisState} from \"../kepler-gl/types/state\";\nimport {DataSet} from \"../kepler-gl/types/data\";\nimport {store} from \"./store\";\nimport {KeplerNoCodeTool} from \"./components/kepler-no-code-tool\";\nimport ReactDOM from \"react-dom\";\n\n\nconst mountKeplerGl = (element: HTMLElement, params: {\n  dataDisplayOptions?: {\n    readOnly?: boolean,\n    centerMap?: boolean,\n  },\n  uiState?: UiState,\n  mapState?: MapState;\n  mapStyle?: MapStyle;\n  visState?: VisState;\n  mapboxApiAccessToken: string;\n  originalHtmlTagMeta: {\n    tag: string;\n    width: number,\n    height: number,\n    mapboxToken: string,\n    onload: string\n  },\n  width: number;\n  height: number;\n  dataSets: Array<DataSet>;\n}) => {\n  const app = (\n    <Provider store={store}>\n      <KeplerNoCodeTool\n        mapboxApiAccessToken={params.mapboxApiAccessToken}\n        width={params.width}\n        height={params.height}\n        dataSets={params.dataSets}\n        dataDisplayOptions={params.dataDisplayOptions}\n        originalHtmlTagMeta={params.originalHtmlTagMeta}\n        keplerState={{\n          uiState: params.uiState,\n          visState: params.visState,\n          mapState: params.mapState,\n          mapStyle: params.mapStyle,\n        }}\n      />\n    </Provider>\n  );\n\n  ReactDOM.render(app, element);\n};\n\nexport default mountKeplerGl;\n","import mountKeplerGl from \"./mount-kepler-gl\";\nimport {DataSet} from \"../kepler-gl/types/data\";\nimport {MapState, MapStyle, UiState, VisState} from \"../kepler-gl/types/state\";\n\nconst parseJSON = <T>(str: string): [Error | null, T | null] => {\n  let obj: Record<string, any> | null = null;\n  let err: Error | null = null;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    err = e as Error;\n  }\n\n  return [err, obj as T];\n}\n\nexport default function initKepler(element: HTMLElement, dataSets: Array<DataSet>) {\n  const mapboxApiAccessToken = element.dataset.mapboxToken;\n  if (!mapboxApiAccessToken) {\n    throw new Error(`Element ${element.id} has not \"data-mapbox-token\" attribute`);\n  }\n\n  const rawWidth = element.dataset.width || '1600';\n  const width = Number.parseInt(rawWidth);\n  if (!width && width < 0) {\n    throw new Error(`Element ${element.id} attribute \"data-width\" has incorrect value, it should be positive integer`);\n  }\n\n  const rawHeight = element.dataset.height || '800';\n  const height = Number.parseInt(rawHeight);\n  if (!height && height < 0) {\n    throw new Error(`Element ${element.id} attribute \"data-height\" has incorrect value, it should be positive integer`);\n  }\n\n  let visState: VisState | null = null;\n  if (element.dataset.visState) {\n    const [error, val] = parseJSON<VisState>(element.dataset.visState);\n    if (error) {\n      throw new Error(`Element ${element.id} has invalid \"data-vis-state\" attribute`);\n    }\n\n    visState = val;\n  }\n\n  let mapState: MapState | null = null;\n  if (element.dataset.mapState) {\n    const [error, val] = parseJSON<MapState>(element.dataset.mapState);\n    if (error) {\n      throw new Error(`Element ${element.id} has invalid \"data-map-state\" attribute`);\n    }\n\n    mapState = val;\n  }\n\n  let mapStyle: MapStyle | null = null;\n  if (element.dataset.mapStyle) {\n    const [error, val] = parseJSON<MapStyle>(element.dataset.mapStyle);\n    if (error) {\n      throw new Error(`Element ${element.id} has invalid \"data-map-style\" attribute`);\n    }\n\n    mapStyle = val;\n  }\n\n  const onloadStr = element.onload!.toString();\n  const originalOnLoad = onloadStr.substring(onloadStr.indexOf(\"{\") + 1, onloadStr.lastIndexOf(\"}\")).replace(/\\n/g, '');\n\n  mountKeplerGl(element, {\n    mapboxApiAccessToken,\n    width: width,\n    height: height,\n    visState: visState!,\n    mapState: mapState!,\n    mapStyle: mapStyle!,\n    dataSets: dataSets,\n    originalHtmlTagMeta: {\n      tag: element.tagName,\n      mapboxToken: mapboxApiAccessToken,\n      width: width,\n      height: height,\n      onload: originalOnLoad,\n    }\n  });\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport initKepler from './modules/kepler-no-code';\nimport reportWebVitals from './reportWebVitals';\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nwindow.initKepler = initKepler;\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const tags = document.querySelectorAll('[data-widget-type=\\'kepler.gl\\']');\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  tags.forEach((tag) => tag.onload())\n})\n\n\n// mountKeplerGl(document.getElementById('root')!, {\n//   width: 1600,\n//   height: 500,\n//   mapboxApiAccessToken: 'pk.eyJ1IjoiaWhhcmtyeXZhbm9zIiwiYSI6ImNrMWtmYjRqeDE2YnIzZGp5bmkzdmNicXUifQ.Y3f3Cmz3xebuejGbi9SIeA',\n//   \"visState\": { \"filters\": [], \"layers\": [ { \"id\": \"ly1no7a\", \"type\": \"point\", \"config\": { \"dataId\": \"some-id\", \"label\": \"some\", \"color\": [ 77, 193, 156 ], \"highlightColor\": [ 252, 242, 26, 255 ], \"columns\": { \"lat\": \"pickup_latitude\", \"lng\": \"pickup_longitude\", \"altitude\": null }, \"isVisible\": true, \"visConfig\": { \"radius\": 10, \"fixedRadius\": false, \"opacity\": 0.8, \"outline\": false, \"thickness\": 2, \"strokeColor\": null, \"colorRange\": { \"name\": \"Global Warming\", \"type\": \"sequential\", \"category\": \"Uber\", \"colors\": [ \"#5A1846\", \"#900C3F\", \"#C70039\", \"#E3611C\", \"#F1920E\", \"#FFC300\" ] }, \"strokeColorRange\": { \"name\": \"Global Warming\", \"type\": \"sequential\", \"category\": \"Uber\", \"colors\": [ \"#5A1846\", \"#900C3F\", \"#C70039\", \"#E3611C\", \"#F1920E\", \"#FFC300\" ] }, \"radiusRange\": [ 0, 50 ], \"filled\": true }, \"hidden\": false, \"textLabel\": [ { \"field\": null, \"color\": [ 255, 255, 255 ], \"size\": 18, \"offset\": [ 0, 0 ], \"anchor\": \"start\", \"alignment\": \"center\" } ] }, \"visualChannels\": { \"colorField\": null, \"colorScale\": \"quantile\", \"strokeColorField\": null, \"strokeColorScale\": \"quantile\", \"sizeField\": null, \"sizeScale\": \"linear\" } } ], \"interactionConfig\": { \"tooltip\": { \"fieldsToShow\": { \"some-id\": [ { \"name\": \"tpep_pickup_datetime\", \"format\": null } ] }, \"compareMode\": false, \"compareType\": \"absolute\", \"enabled\": true }, \"brush\": { \"size\": 0.5, \"enabled\": false }, \"geocoder\": { \"enabled\": false }, \"coordinate\": { \"enabled\": false } }, \"layerBlending\": \"normal\", \"splitMaps\": [], \"animationConfig\": { \"currentTime\": null, \"speed\": 1 } }, \"mapState\": { \"bearing\": 0, \"dragRotate\": false, \"latitude\": 40.74702835, \"longitude\": -22.8534467370726, \"pitch\": 0, \"zoom\": 5, \"isSplit\": false }, \"mapStyle\": { \"styleType\": \"dark\", \"topLayerGroups\": {}, \"visibleLayerGroups\": { \"label\": true, \"road\": true, \"border\": false, \"building\": true, \"water\": true, \"land\": true, \"3d building\": false }, \"threeDBuildingColor\": [ 9.665468314072013, 17.18305478057247, 31.1442867897876 ], \"mapStyles\": {} },\n//   dataSets: [{\n//     info: {\n//       label: 'Some label',\n//       id: 'some-id'\n//     },\n//     data: {\n//       fields: [\n//         {name: 'tpep_pickup_datetime', format: 'YYYY-M-D H:m:s', type: 'timestamp'},\n//         {name: 'pickup_longitude', format: '', type: 'real'},\n//         {name: 'pickup_latitude', format: '', type: 'real'}\n//       ],\n//       rows: [\n//         ['2015-01-15 19:05:39 +00:00', Math.random() * -73.99389648, 40.75011063],\n//         ['2015-01-15 19:05:39 +00:00', Math.random() * -73.97642517, 40.73981094],\n//         ['2015-01-15 19:05:40 +00:00', Math.random() * -73.96870422, 40.75424576]\n//       ]\n//     }\n//   }]\n// })\n","var map = {\n\t\"./\": 40,\n\t\"./ca\": 593,\n\t\"./ca.js\": 593,\n\t\"./cn\": 594,\n\t\"./cn.js\": 594,\n\t\"./en\": 431,\n\t\"./en.js\": 431,\n\t\"./es\": 595,\n\t\"./es.js\": 595,\n\t\"./fi\": 596,\n\t\"./fi.js\": 596,\n\t\"./formatted-message\": 432,\n\t\"./formatted-message.js\": 432,\n\t\"./index\": 40,\n\t\"./index.js\": 40,\n\t\"./ja\": 597,\n\t\"./ja.js\": 597,\n\t\"./locales\": 117,\n\t\"./locales.js\": 117,\n\t\"./pt\": 598,\n\t\"./pt.js\": 598,\n\t\"./ru\": 599,\n\t\"./ru.js\": 599\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 983;"],"sourceRoot":""}